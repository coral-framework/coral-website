{"modules":[{"name":"co","title":"Coral Module","desc":"Module that powers the Coral framework.","types":[{"tk":"struct","name":"co.CSLError","desc":"Contextual information about why a type could not be load...","members":[{"mk":"field","name":"filename","desc":"Full path to the CSL file."},{"mk":"field","name":"line","desc":"Line where the error occurred."},{"mk":"field","name":"message","desc":"Error message."}]},{"tk":"interface","name":"co.IAnnotated","desc":"Base interface for services that can be annotated.","members":[{"mk":"field","name":"annotations","desc":"List of annotations on this service."},{"mk":"method","name":"addAnnotation","desc":"Adds an annotation onto this service."},{"mk":"method","name":"findAnnotation","desc":"Finds the first annotation of a given type."}]},{"tk":"interface","name":"co.IAnnotation","desc":"Base interface for annotations. Decorates an annotated se...","members":[]},{"tk":"interface","name":"co.IArray","desc":"Describes an array type.","members":[{"mk":"field","name":"elementType","desc":"Array element type."}]},{"tk":"interface","name":"co.IClassType","desc":"Interface for types that have methods.","members":[{"mk":"field","name":"methods","desc":"List of member methods."}]},{"tk":"interface","name":"co.IComponent","desc":"Describes a component type.","members":[{"mk":"field","name":"facets","desc":"List of facets (ports that provide services)."},{"mk":"field","name":"ports","desc":"List of all component ports (both facets and receptacles)."},{"mk":"field","name":"receptacles","desc":"List of receptacles (ports for consuming services)."}]},{"tk":"interface","name":"co.ICompositeType","desc":"Interface for types that have members.","members":[{"mk":"field","name":"members","desc":"List of local members (fields, methods, ports, etc.)."},{"mk":"method","name":"getMember","desc":"Finds a member by name, considering inherited members."}]},{"tk":"interface","name":"co.ICppBlock","desc":"Contains C++ code for interfaces and native classes in CSL.","members":[{"mk":"field","name":"value","desc":"C++ code."}]},{"tk":"interface","name":"co.IDocumentation","desc":"Contains documentation for types in CSL.","members":[{"mk":"field","name":"value","desc":"Type documentation."},{"mk":"method","name":"addDocFor","desc":"Adds documentation for member."},{"mk":"method","name":"getDocFor","desc":"Gets documentation for member."}]},{"tk":"interface","name":"co.IDynamicServiceProvider","desc":"Allows an object to provide new services at runtime via d...","members":[{"mk":"method","name":"dynamicGetFacet","desc":"Called when the port through which a proxy is provided is..."},{"mk":"method","name":"dynamicGetField","desc":"Called when a proxy needs to get the value of a field."},{"mk":"method","name":"dynamicInvoke","desc":"Called when a proxy has a method invoked."},{"mk":"method","name":"dynamicRegisterService","desc":"Called when a new proxy service is created for this provi..."},{"mk":"method","name":"dynamicSetField","desc":"Called when a proxy needs to set the value of a field."}]},{"tk":"interface","name":"co.IDynamicTypeProvider","desc":"Base interface for annotations that make a type dynamic.","members":[{"mk":"method","name":"provideReflectorFor","desc":"Provides a reflector for type."}]},{"tk":"interface","name":"co.IEnum","desc":"Describes an enum type.","members":[{"mk":"field","name":"identifiers","desc":"List of identifiers."},{"mk":"method","name":"getValueOf","desc":"Finds an identifier and returns its value."}]},{"tk":"interface","name":"co.IException","desc":"Describes an exception type.","members":[]},{"tk":"interface","name":"co.IField","desc":"Describes a field as a member of a co.IRecordType.","members":[{"mk":"field","name":"isReadOnly","desc":"Whether the field is read-only (true) or read-write (fals..."},{"mk":"field","name":"type","desc":"Field type."}]},{"tk":"interface","name":"co.IInclude","desc":"States a header file must be included in order to use a n...","members":[{"mk":"field","name":"value","desc":"C++ header name."}]},{"tk":"interface","name":"co.IInterface","desc":"Describes an interface type.","members":[{"mk":"field","name":"baseType","desc":"Parent interface, or null if this interface is co.IService."},{"mk":"field","name":"subTypes","desc":"List of interfaces that directly extend this interface."},{"mk":"field","name":"superTypes","desc":"List of ancestors. Starts with baseType and goes up to co..."}]},{"tk":"exception","name":"co.IllegalArgumentException","desc":"Raised when a method is passed an illegal argument."},{"tk":"exception","name":"co.IllegalCastException","desc":"Raised when a type cast or a value conversion fails."},{"tk":"exception","name":"co.IllegalNameException","desc":"Raised when a name is illegal."},{"tk":"exception","name":"co.IllegalStateException","desc":"Raised when something is in an unexpected or illegal state."},{"tk":"interface","name":"co.IMember","desc":"Interface for members of a co.ICompositeType.","members":[{"mk":"field","name":"index","desc":"Index of the member within its type\u2019s co.ICompositeTypeme..."},{"mk":"field","name":"kind","desc":"Member kind (field, method or port)."},{"mk":"field","name":"name","desc":"Member name."},{"mk":"field","name":"owner","desc":"Type that contains this member."}]},{"tk":"interface","name":"co.IMethod","desc":"Describes a method as a member of a co.IClassType.","members":[{"mk":"field","name":"exceptions","desc":"List of raised exceptions."},{"mk":"field","name":"parameters","desc":"List of method parameters."},{"mk":"field","name":"returnType","desc":"The method\u2019s return type, or null if void."}]},{"tk":"interface","name":"co.IMethodBuilder","desc":"Assists in the definition of a method for a new Coral type.","members":[{"mk":"field","name":"methodName","desc":"Name of the method being defined."},{"mk":"field","name":"typeBuilder","desc":"Type builder for which the method is being defined."},{"mk":"method","name":"createMethod","desc":"Creates the method into typeBuilder."},{"mk":"method","name":"defineException","desc":"Adds an exception raised by the method."},{"mk":"method","name":"defineParameter","desc":"Adds a method parameter."},{"mk":"method","name":"defineReturnType","desc":"Defines the method\u2019s return type."}]},{"tk":"interface","name":"co.IModule","desc":"A collection of types and resources.","members":[{"mk":"field","name":"namespace","desc":"Namespace where the module is located."},{"mk":"field","name":"parts","desc":"List of parts that comprise the module."},{"mk":"field","name":"rank","desc":"Adjusts the order in which modules receive updates from t..."},{"mk":"field","name":"state","desc":"Current state of the module and all its parts."},{"mk":"method","name":"abort","desc":"Aborts the module."},{"mk":"method","name":"disintegrate","desc":"Disintegrates the module from the system."},{"mk":"method","name":"dispose","desc":"Disposes the module."},{"mk":"method","name":"initialize","desc":"Initializes the module."},{"mk":"method","name":"integrate","desc":"Integrates the module with the system."},{"mk":"method","name":"integratePresentation","desc":"Integrates the module\u2019s presentation into the system."}]},{"tk":"interface","name":"co.IModuleManager","desc":"Fa\u00e7ade to the module system, with methods to find and loa...","members":[{"mk":"field","name":"compatibilityChecking","desc":"Whether module compatibility checking is enabled."},{"mk":"field","name":"loaders","desc":"List of installed loaders."},{"mk":"field","name":"modules","desc":"List of loaded modules."},{"mk":"method","name":"findModule","desc":"Returns the module currently loaded at namespace moduleNa..."},{"mk":"method","name":"installLoader","desc":"Adds a loader to loaders."},{"mk":"method","name":"isLoadable","desc":"Returns whether namespace moduleName contains a loadable ..."},{"mk":"method","name":"load","desc":"Gets or loads the module at namespace moduleName."},{"mk":"method","name":"uninstallLoader","desc":"Removes an installed loader."}]},{"tk":"interface","name":"co.IModulePart","desc":"Represents an artifact loaded as part of a module.","members":[{"mk":"method","name":"disintegrate","desc":"Disintegrates the module part from the system."},{"mk":"method","name":"dispose","desc":"Disposes the module part."},{"mk":"method","name":"initialize","desc":"Initializes the module part."},{"mk":"method","name":"integrate","desc":"Integrates the module part with the system."},{"mk":"method","name":"integratePresentation","desc":"Integrates the module part\u2019s presentation into the system."}]},{"tk":"interface","name":"co.IModulePartLoader","desc":"Loads a certain kind of co.IModulePart from the repository.","members":[{"mk":"method","name":"canLoadModulePart","desc":"Returns whether a module part can be loaded from moduleNa..."},{"mk":"method","name":"loadModulePart","desc":"Loads a module part from namespace moduleName."}]},{"tk":"interface","name":"co.INamespace","desc":"Represents a namespace in the Coral repository.","members":[{"mk":"field","name":"childNamespaces","desc":"List of child namespaces."},{"mk":"field","name":"fullName","desc":"Fully qualified name of the namespace. For example, \u201cfoo...."},{"mk":"field","name":"module","desc":"Module loaded in this namespace, or null if none was load..."},{"mk":"field","name":"name","desc":"Local name of the namespace within its parent. For exampl..."},{"mk":"field","name":"parentNamespace","desc":"Parent namespace, or null if this is the root."},{"mk":"field","name":"types","desc":"List of local types (i.e. defined in this namespace)."},{"mk":"method","name":"defineChildNamespace","desc":"Creates a child namespace with the given name."},{"mk":"method","name":"defineType","desc":"Creates a local type with the given name and kind."},{"mk":"method","name":"findChildNamespace","desc":"Finds a child namespace by name."},{"mk":"method","name":"findType","desc":"Finds a local type by name."}]},{"tk":"interface","name":"co.INativeClass","desc":"Describes a native class type.","members":[]},{"tk":"component","name":"co.IncludeAnnotation","desc":"Provides the @co.Include annotation for use with native c...","members":[{"mk":"facet","name":"annotation","desc":"The annotation type."}]},{"tk":"interface","name":"co.IObject","desc":"Provides object identity and reflection for every compone...","members":[{"mk":"field","name":"component","desc":"The component from which this object was created."},{"mk":"method","name":"getServiceAt","desc":"Returns the service provided-by or bound-to a port in thi..."},{"mk":"method","name":"setServiceAt","desc":"Binds a service to a receptacle in this object."}]},{"tk":"interface","name":"co.IParameter","desc":"Describes a method parameter. See co.IMethod.","members":[{"mk":"field","name":"isIn","desc":"Whether the parameter is used as input."},{"mk":"field","name":"isOut","desc":"Whether the parameter is used as output."},{"mk":"field","name":"name","desc":"Parameter name."},{"mk":"field","name":"type","desc":"Parameter type."}]},{"tk":"interface","name":"co.IPort","desc":"Describes a component port. See co.IComponent.","members":[{"mk":"field","name":"isFacet","desc":"Whether this port is a facet (true) or a receptacle (fals..."},{"mk":"field","name":"type","desc":"Port interface\u2014indicates the type of service provided or ..."}]},{"tk":"interface","name":"co.IRecordType","desc":"Interface for types that have fields.","members":[{"mk":"field","name":"fields","desc":"List of member fields."}]},{"tk":"interface","name":"co.IReflector","desc":"Handles reflection operations for a Coral type.","members":[{"mk":"field","name":"size","desc":"Number of bytes occupied by instances of this type."},{"mk":"field","name":"type","desc":"The type we are providing reflection for."},{"mk":"method","name":"getField","desc":"Gets the value of a field in instance and puts it into var."},{"mk":"method","name":"invoke","desc":"Invokes a method from instance."},{"mk":"method","name":"newDynamicProxy","desc":"Creates a dynamic proxy (of this type) to the specified p..."},{"mk":"method","name":"newInstance","desc":"Instantiates a component."},{"mk":"method","name":"raise","desc":"Raises an exception (of this type) with the given message."},{"mk":"method","name":"setField","desc":"Sets the value of a field in instance to value."}]},{"tk":"interface","name":"co.IService","desc":"Base of all interfaces. Represents a service provided by ...","members":[{"mk":"field","name":"facet","desc":"The port (within the provider) where this service is prov..."},{"mk":"field","name":"interface","desc":"The interface through which this service is provided."},{"mk":"field","name":"provider","desc":"The object that provides this service."},{"mk":"method","name":"serviceRelease","desc":"Decrements the service\u2019s reference count."},{"mk":"method","name":"serviceRetain","desc":"Increments the service\u2019s reference count."}]},{"tk":"interface","name":"co.IServiceManager","desc":"A central database where services are published and queri...","members":[{"mk":"field","name":"isLazy","desc":"Whether lazy instantiation is enabled. Default is true."},{"mk":"method","name":"addService","desc":"Publishes a global provider of serviceType."},{"mk":"method","name":"addServiceForType","desc":"Publishes a specialized provider of serviceType for type."},{"mk":"method","name":"addServiceProvider","desc":"Publishes a global provider of serviceType (with lazy ins..."},{"mk":"method","name":"addServiceProviderForType","desc":"Publishes a specialized provider of serviceType for type ..."},{"mk":"method","name":"getService","desc":"Returns the global service of type serviceType."},{"mk":"method","name":"getServiceForInstance","desc":"Returns a service of type serviceType specialized for ins..."},{"mk":"method","name":"getServiceForType","desc":"Returns a service of type serviceType specialized for type."},{"mk":"method","name":"removeService","desc":"Removes the service of type serviceType published for glo..."},{"mk":"method","name":"removeServiceForType","desc":"Removes the service of type serviceType published for type."}]},{"tk":"interface","name":"co.IStruct","desc":"Describes a struct type.","members":[]},{"tk":"interface","name":"co.ISystem","desc":"Fa\u00e7ade to the whole system. Controls the system\u2019s life cy...","members":[{"mk":"field","name":"modules","desc":"Fa\u00e7ade to the module system, with methods to find and loa..."},{"mk":"field","name":"services","desc":"A global database where services are published and queried."},{"mk":"field","name":"state","desc":"The system\u2019s current life-cycle state. See co.SystemState."},{"mk":"field","name":"types","desc":"Fa\u00e7ade to the type system, with methods to find, load and..."},{"mk":"method","name":"setupBase","desc":"Loads all requiredModules (if any) and integrates the sys..."},{"mk":"method","name":"setupPresentation","desc":"Integrates the presentation layer and sets the system run..."},{"mk":"method","name":"tearDown","desc":"Disintegrates and disposes all modules."}]},{"tk":"interface","name":"co.IType","desc":"Represents a Coral type. Base interface for type descript...","members":[{"mk":"field","name":"binarySignature","desc":"Fingerprint of the type\u2019s binary interface."},{"mk":"field","name":"currentReflector","desc":"The type\u2019s reflector, or null if a reflector hasn\u2019t been ..."},{"mk":"field","name":"fullName","desc":"Fully qualified name of the type. For example, \u201cnspc.Some..."},{"mk":"field","name":"fullSignature","desc":"Fingerprint of all type data (except annotations)."},{"mk":"field","name":"kind","desc":"What kind of type is this type."},{"mk":"field","name":"name","desc":"Local name of the type (within its namespace). For exampl..."},{"mk":"field","name":"namespace","desc":"Namespace where the type is defined."},{"mk":"field","name":"reflector","desc":"The type\u2019s reflector. Getting this field may raise an exc..."},{"mk":"method","name":"isA","desc":"Returns whether this type descends from the given super t..."}]},{"tk":"interface","name":"co.ITypeBuilder","desc":"Assists in the definition of a new Coral type.","members":[{"mk":"field","name":"kind","desc":"Kind of type being defined."},{"mk":"field","name":"namespace","desc":"Namespace where the type is being defined."},{"mk":"field","name":"typeName","desc":"Local name of the type being defined."},{"mk":"method","name":"createType","desc":"Creates and returns the type. You don\u2019t have to call this..."},{"mk":"method","name":"defineBaseType","desc":"Makes the type inherit from baseType."},{"mk":"method","name":"defineField","desc":"Adds a field to a record type (a struct, interface or nat..."},{"mk":"method","name":"defineIdentifier","desc":"Adds an identifier to an enum."},{"mk":"method","name":"defineMethod","desc":"Adds a method to a class type (an interface or native cla..."},{"mk":"method","name":"definePort","desc":"Adds a port to a component."}]},{"tk":"interface","name":"co.ITypeManager","desc":"Fa\u00e7ade to the type system, with methods to find and creat...","members":[{"mk":"field","name":"rootNS","desc":"The root (or global) namespace. Corresponds to the reposi..."},{"mk":"field","name":"transaction","desc":"Transaction that must be used in order to add types to th..."},{"mk":"method","name":"findNamespace","desc":"Finds an existing namespace by full name."},{"mk":"method","name":"findType","desc":"Finds an existing type by full name."},{"mk":"method","name":"getArrayOf","desc":"Gets or creates an array of the given elementType."},{"mk":"method","name":"getNamespace","desc":"Gets or creates a namespace by full name."},{"mk":"method","name":"getType","desc":"Gets or loads a type by full name."},{"mk":"method","name":"loadType","desc":"Gets or loads a type by full name, without raising except..."}]},{"tk":"interface","name":"co.ITypeTransaction","desc":"Atomically validates and adds a set of types to the system.","members":[{"mk":"field","name":"typeBuilders","desc":"List of type builders in the transaction."},{"mk":"method","name":"commit","desc":"Validates and commits all types in the transaction."},{"mk":"method","name":"rollback","desc":"Removes references to the types in the transaction."}]},{"tk":"enum","name":"co.MemberKind","desc":"Enumeration of member kinds. See co.IMember."},{"tk":"exception","name":"co.MissingInputException","desc":"Raised when required input is missing."},{"tk":"exception","name":"co.MissingServiceException","desc":"Raised when a required service is not available."},{"tk":"exception","name":"co.ModuleLoadException","desc":"Raised when an error occurs while loading a module."},{"tk":"enum","name":"co.ModuleState","desc":"Enumeration of states in a module\u2019s life cycle."},{"tk":"exception","name":"co.NoSuchPortException","desc":"Raised when a requested port is not available."},{"tk":"exception","name":"co.NotSupportedException","desc":"Raised when an operation is not supported."},{"tk":"enum","name":"co.SystemState","desc":"Enumeration of states in the system\u2019s life cycle."},{"tk":"enum","name":"co.TypeKind","desc":"Enumeration of Coral type kinds."},{"tk":"exception","name":"co.TypeLoadException","desc":"Raised when an error occurs while loading a type."},{"tk":"native class","name":"co.Uuid","desc":"A 128-bit Universally Unique IDentifier (UUID).","members":[{"mk":"field","name":"isNull","desc":"True if this is the null UUID (that is, \u201c00000000-0000-00..."},{"mk":"method","name":"clear","desc":"Makes this Uuid a null UUID."},{"mk":"method","name":"createRandom","desc":"! Creates a new random Uuid."},{"mk":"method","name":"createSha1","desc":"! Creates an Uuid based on the SHA-1 hash of the specifie..."},{"mk":"method","name":"getString","desc":"Returns the string representation of this Uuid. UUIDs are..."},{"mk":"method","name":"setString","desc":"Sets the contents of this Uuid based on a string formatte..."}]}]},{"name":"lua","title":"Lua Module","desc":"Integrates the Lua scripting language into Coral.","types":[{"tk":"component","name":"lua.Component","desc":"A dynamic component, with interfaces defined in run-time ...","members":[{"mk":"facet","name":"dynamicServiceProvider","desc":"Handles requests to the proxy interfaces created for this..."},{"mk":"facet","name":"reflector","desc":"This component has its own built-in reflector."}]},{"tk":"exception","name":"lua.Exception","desc":"General-purpose exception raised by the Lua module."},{"tk":"interface","name":"lua.IInterceptor","desc":"Observes all interaction between Lua and Coral services.","members":[{"mk":"method","name":"postGetField","desc":"Called after Lua gets the value of a service field."},{"mk":"method","name":"postGetService","desc":"Called after Lua obtains a service from an object port."},{"mk":"method","name":"postInvoke","desc":"Called after a service method called from Lua returns."},{"mk":"method","name":"postSetField","desc":"Called after Lua sets the value of a service field."},{"mk":"method","name":"postSetService","desc":"Called after Lua changes the service connected to an obje..."},{"mk":"method","name":"serviceReleased","desc":"Called when Lua releases all references to a service."},{"mk":"method","name":"serviceRetained","desc":"Called when Lua first gets a reference to a service."}]},{"tk":"interface","name":"lua.ILauncher","desc":"Main interface for the lua.Launcher component.","members":[{"mk":"method","name":"main","desc":"Expects a Lua script name as first argument.\nAll other ar..."}]},{"tk":"interface","name":"lua.IScripted","desc":"Annotation for components scripted in Lua.","members":[{"mk":"field","name":"value","desc":""}]},{"tk":"interface","name":"lua.IState","desc":"For interfacing with Lua.\nThe main Lua state is exposed a...","members":[{"mk":"field","name":"interceptors","desc":"List of active interceptors."},{"mk":"method","name":"addInterceptor","desc":"Adds an interceptor at the end of the list."},{"mk":"method","name":"call","desc":"Calls a function from a Lua module."},{"mk":"method","name":"collectGarbage","desc":"Invokes a full cycle of the Lua garbage collector."},{"mk":"method","name":"findScript","desc":"Looks for a Lua script with the given \\a name in the Cora..."},{"mk":"method","name":"removeInterceptor","desc":"Removes the given interceptor from the list."}]},{"tk":"component","name":"lua.Launcher","desc":"Launcher component for use with the \u2018coral\u2019 launcher exec...","members":[{"mk":"facet","name":"launcher","desc":""}]},{"tk":"component","name":"lua.lua","desc":"","members":[{"mk":"facet","name":"part","desc":""}]},{"tk":"component","name":"lua.ModulePart","desc":"A co.IModulePart that wraps a Lua script in a module\u2019s dir.","members":[{"mk":"facet","name":"part","desc":""}]},{"tk":"component","name":"lua.ModulePartLoader","desc":"A co.IModulePartLoader that allows Coral modules to be wr...","members":[{"mk":"facet","name":"loader","desc":""}]},{"tk":"component","name":"lua.ScriptedAnnotation","desc":"Provides the @lua.Scripted( \u201cscript.name\u201d ) annotation.","members":[{"mk":"facet","name":"annotation","desc":""}]},{"tk":"component","name":"lua.Universe","desc":"Singleton that manages a Lua universe. If multiple instan...","members":[{"mk":"facet","name":"state","desc":""}]}]}],"pages":[{"title":"About","desc":"Originally developed for use in a real-time 3D engine, Co...","url":"/about"},{"title":"Community","desc":"We don\u2019t have a mailing list, forum or twitter yet. Howev...","url":"/community"},{"title":"Getting Started","desc":"How to install and use the Coral SDK, an overview with ex...","url":"/guides/getting-started","sections":[{"title":"Download","id":"download"},{"title":"Installing the Coral SDK","id":"install"},{"title":"What\u2019s in the SDK","id":"whatsin"},{"title":"Hello Coral","id":"hello"}]},{"title":"Guides","desc":"Conceptual material, how-tos and examples.","url":"/guides"},{"title":"Portability","desc":"Coral is designed for source-code portability, meaning th...","url":"/guides/portability","sections":[{"title":"Supported platforms","id":"supported"},{"title":"Adding support for new platforms","id":"adding"}]},{"title":"Coral Framework","desc":"Coral is a simple framework for service-oriented, compone...","url":"/"},{"title":"Coral C++ API","desc":"Coming soon.","url":"/reference/cpp"},{"title":"Coral Specification Language (CSL)","desc":"Coming soon.","url":"/reference/csl"},{"title":"Reference","desc":"API and other reference documentation.","url":"/reference"}]}